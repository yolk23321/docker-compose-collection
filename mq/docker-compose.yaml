version: '3.9'

services:
  zookeeper:
    image: 'bitnami/zookeeper:3.9.2'
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
       - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - zk_data:/bitnami/zookeeper/data
    restart: always
    healthcheck:
      test: ["CMD", "zkServer.sh", "status"]
      interval: 30s
      timeout: 10s
      retries: 5
  kafka:
    image: 'bitnami/kafka:3.6.2'
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    depends_on:
      zookeeper:
        condition: service_healthy
    volumes:
      - kafka_data:/var/lib/kafka/data
    restart: always

  # rabbitmq:
  #   image: rabbitmq:3-management
  #   container_name: rabbitmq
  #   ports:
  #     - "15672:15672" 
  #     - "5672:5672"    # RabbitMQ default AMQP protocol port
  #   environment:
  #     RABBITMQ_DEFAULT_USER: admin       # 默认用户名
  #     RABBITMQ_DEFAULT_PASS: admin   # 默认密码
  #   volumes:
  #     - rabbitmq_data:/var/lib/rabbitmq   # 持久化存储 RabbitMQ 数据

  # # 5.x
  # namesrv:
  #   image: apache/rocketmq:5.3.2
  #   container_name: rmqnamesrv
  #   ports:
  #     - 9876:9876
  #   networks:
  #     - rocketmq
  #   command: sh mqnamesrv
  # broker:
  #   image: apache/rocketmq:5.3.2
  #   container_name: rmqbroker
  #   ports:
  #     - 10909:10909
  #     - 10911:10911
  #     - 10912:10912
  #   environment:
  #     - NAMESRV_ADDR=rmqnamesrv:9876
  #   depends_on:
  #     - namesrv
  #   networks:
  #     - rocketmq
  #   command: sh mqbroker
  # proxy:
  #   image: apache/rocketmq:5.3.2
  #   container_name: rmqproxy
  #   networks:
  #     - rocketmq
  #   depends_on:
  #     - broker
  #     - namesrv
  #   ports:
  #     - 8080:8080
  #     - 8081:8081
  #   restart: on-failure
  #   environment:
  #     - NAMESRV_ADDR=rmqnamesrv:9876
  #   command: sh mqproxy
  # rmqdashboard:
  #   image: apacherocketmq/rocketmq-dashboard:latest
  #   container_name: rmqdashboard
  #   environment:
  #     - "JAVA_OPTS=-Drocketmq.namesrv.addr=rmqnamesrv:9876"
  #   ports:
  #     - "8080:8080"
  #   networks:
  #     - rocketmq
  #   depends_on:
  #     - namesrv
  #     - broker
  
# # 4.x
#   namesrv:
#     image: apache/rocketmq:4.9.4
#     container_name: rmq-namesrv
#     ports:
#       - "9876:9876"
#     environment:
#       - JAVA_OPT_EXT=-Xms512m -Xmx512m -Xmn256m
#     command: sh mqnamesrv
#     volumes:
#       - ./logs/namesrv:/home/rocketmq/logs
#       - ./store/namesrv:/home/rocketmq/store

#   broker:
#     image: apache/rocketmq:4.9.4
#     container_name: rmq-broker
#     ports:
#       - "10911:10911"
#       - "10909:10909"
#     environment:
#       - NAMESRV_ADDR=namesrv:9876
#       - JAVA_OPT_EXT=-Xms512m -Xmx512m -Xmn256m
#     depends_on:
#       - namesrv
#     command: sh mqbroker -c /opt/rocketmq-4.9.4/conf/broker.conf
#     volumes:
#       - ./logs/broker:/home/rocketmq/logs
#       - ./store/broker:/home/rocketmq/store
#       - ./conf/broker.conf:/opt/rocketmq-4.9.4/conf/broker.conf
#   dashboard:
#     image: apacherocketmq/rocketmq-dashboard:1.0.0
#     container_name: rmq-dashboard
#     ports:
#       - "8080:8080"
#     environment:
#       - JAVA_OPTS=-Drocketmq.namesrv.addr=namesrv:9876
#     depends_on:
#       - namesrv
# networks:
#   rocketmq:
#     driver: bridge

volumes:
  zk_data:
  kafka_data:
  # rabbitmq_data: 
  # rocketmq_data: 

